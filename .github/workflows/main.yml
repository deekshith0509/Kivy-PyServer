name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 1,15 * *'  # This will run on the 1st and 15th of every month

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Get the current date for caching
      - name: Get Date
        id: get-date
        run: echo "date=$(date -u +%Y%m%d)" >> $GITHUB_ENV

      # Step 3: Cache Buildozer global directory
      - name: Cache Buildozer global directory
        uses: actions/cache@v2
        with:
          path: ~/.buildozer
          key: buildozer-global-${{ hashFiles('buildozer.spec') }}

      # Step 4: Cache Buildozer dependencies
      - name: Cache Buildozer dependencies
        uses: actions/cache@v2
        with:
          path: ~/.buildozer/android/platform
          key: buildozer-${{ runner.os }}-${{ env.date }}-${{ hashFiles('buildozer.spec') }}

      # Step 5: Install required system dependencies
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip python3-setuptools openjdk-11-jdk
          pip install --upgrade pip
          pip install Cython  # Ensure Cython is installed

      # Step 6: Install Buildozer and Python-for-Android
      - name: Install Buildozer and p4a
        run: |
          pip install buildozer
          pip install python-for-android

      # Step 7: Build the APK using Buildozer with retry logic
      - name: Build APK
        run: |
          for i in {1..3}; do
            buildozer -v android debug && break || sleep 10
          done

      # Step 8: Upload APK artifacts
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: APK
          path: bin/*.apk  # Assuming the APK is generated in the bin folder
