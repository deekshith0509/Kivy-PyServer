name: Build Android APK
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip openjdk-11-jdk build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev libsqlite3-dev libbz2-dev

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install cython buildozer

      - name: Accept Android SDK licenses
        run: |
          yes | sdkmanager --licenses
          mkdir -p $ANDROID_HOME/licenses
          echo "d56f5187479451eabf01fb78af6dfcb131a6481e" > $ANDROID_HOME/licenses/android-sdk-license
          echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" >> $ANDROID_HOME/licenses/android-sdk-license

      - name: Install specific Android SDK components
        run: |
          sdkmanager "platforms;android-30" "build-tools;30.0.3" "ndk;21.4.7075529" "platform-tools"
          echo "Installed SDK components:"
          sdkmanager --list

      - name: Set up environment variables
        run: |
          echo "JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64" >> $GITHUB_ENV
          echo "ANDROID_HOME=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          echo "PATH=$ANDROID_HOME/tools:$ANDROID_HOME/tools/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/30.0.3:$PATH" >> $GITHUB_ENV

      - name: Locate and link Aidl
        run: |
          AIDL_PATH=$(find $ANDROID_HOME -name aidl | grep build-tools | head -n 1)
          if [ -n "$AIDL_PATH" ]; then
            echo "Aidl found at: $AIDL_PATH"
            sudo ln -s $AIDL_PATH /usr/local/bin/aidl
            echo "Aidl linked to /usr/local/bin/aidl"
          else
            echo "Aidl not found in Android SDK"
            exit 1
          fi

      - name: Verify Aidl installation
        run: |
          which aidl
          aidl --version

      - name: Cache Buildozer global directory
        uses: actions/cache@v3
        with:
          path: ~/.buildozer
          key: buildozer-global-${{ hashFiles('buildozer.spec') }}-${{ hashFiles('**/*.py') }}

      - name: Cache Buildozer dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.buildozer/android/platform
          key: ${{ runner.os }}-${{ hashFiles('buildozer.spec') }}-${{ hashFiles('**/*.py') }}

      - name: Build APK
        run: |
          buildozer android debug
          for i in {1..3}; do
            buildozer android debug && break || sleep 10
          done

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: APK
          path: bin/*.apk
          if-no-files-found: warn
