name: Build and Upload Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      CYTHON_VERSION: 0.29.33
      LIBFFI_VERSION: 3.4.2
      ANDROID_NDK_VERSION: 25b

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Cache Buildozer global directory
      uses: actions/cache@v3
      with:
        path: ~/.buildozer
        key: ${{ runner.os }}-buildozer-global

    - name: Install dependencies
      run: |
        sudo apt-get update && sudo apt-get install -y \
          build-essential git python3-pip autoconf libtool pkg-config zlib1g-dev \
          libncurses5-dev libncursesw5-dev libtinfo5 cmake libffi-dev libssl-dev \
          openjdk-11-jdk || true
        pip install --upgrade pip setuptools wheel || true
        pip install --upgrade Cython==${{ env.CYTHON_VERSION }} || true
        pip install --upgrade buildozer || true

    - name: Verify Buildozer Installation
      run: |
        echo "Verifying Buildozer installation..."
        if command -v buildozer; then
          echo "Buildozer is installed."
          buildozer --version
        else
          echo "Buildozer is not installed. Attempting reinstallation..."
          pip install --upgrade buildozer || true
          if command -v buildozer; then
            echo "Buildozer installed successfully after reinstallation."
            buildozer --version
          else
            echo "Failed to install Buildozer." && exit 1
          fi
        fi

    - name: Prepare Buildozer configuration
      run: |
        if [ ! -f buildozer.spec ]; then
          echo "Creating default buildozer.spec"
          buildozer init  # Create a new buildozer.spec if it does not exist
        fi
        # Ensure buildozer.spec is populated correctly
        if ! grep -q "\[buildozer\]" buildozer.spec; then
          echo "[buildozer]" >> buildozer.spec
          echo "log_level = 2" >> buildozer.spec
        fi
        # Update specific configurations
        sed -i 's/^android.ndk =.*/android.ndk = ${{ env.ANDROID_NDK_VERSION }}/' buildozer.spec || true
        sed -i 's/^requirements =.*/requirements = python3,kivy==2.1.0,qrcode,plyer,kivymd,materialyoucolor,exceptiongroup,asyncgui,asynckivy,Pillow,urllib3,requests,pyjnius,setuptools,libffi==${{ env.LIBFFI_VERSION }}/' buildozer.spec || true

    - name: Ensure necessary directories exist
      run: |
        mkdir -p ~/.buildozer/android/platform || true
        mkdir -p ~/.buildozer/android/platform/python-for-android || true

    - name: Setup Android SDK
      run: |
        echo "Setting up Android SDK..."
        sudo apt-get install -y android-sdk
        yes | sdkmanager --licenses || true

    - name: Clean Buildozer cache
      run: |
        rm -rf ~/.buildozer/android/platform || true
        buildozer android clean || true

    - name: Build APK
      run: |
        buildozer android debug
      env:
        BUILDOZER_WARN_ON_ROOT: 0

    - name: Upload APK artifact
      uses: actions/upload-artifact@v3
      with:
        name: app-debug
        path: bin/*.apk

    - name: Upload build logs on failure
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: build-logs
        path: |
          ~/.buildozer/android/platform/build-*/dists/*/log/*.log
          ~/.buildozer/android/platform/build-*/dists/*/log/*.txt

    - name: Python environment info
      if: failure()
      run: |
        python --version
        pip list

    - name: System info
      if: failure()
      run: |
        uname -a
        lsb_release -a
        free -h
        df -h
