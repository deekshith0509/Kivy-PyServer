name: Build and Upload APK

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Install pyenv and dependencies
      - name: Install pyenv and dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libssl-dev zlib1g-dev \
              libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm \
              libncurses5-dev libncursesw5-dev xz-utils tk-dev \
              libffi-dev liblzma-dev python-openssl git

          # Install pyenv
          curl https://pyenv.run | bash
          echo 'export PATH="$HOME/.pyenv/bin:$PATH"' >> $GITHUB_ENV
          echo 'eval "$(pyenv init --path)"' >> $GITHUB_ENV
          echo 'eval "$(pyenv init -)"' >> $GITHUB_ENV
          echo 'eval "$(pyenv virtualenv-init -)"' >> $GITHUB_ENV
          source $GITHUB_ENV

          # Install Python 3.10.12
          pyenv install 3.10.12
          pyenv global 3.10.12

      # Step 3: Create and activate a virtual environment
      - name: Set up Python virtual environment
        run: |
          python -m venv venv
          echo "source venv/bin/activate" >> $GITHUB_ENV
          source venv/bin/activate

      # Step 4: Install Python dependencies
      - name: Install Python dependencies
        run: |
          source venv/bin/activate
          python -m pip install --upgrade pip
          pip install cython buildozer

      # Step 5: Build the APK
      - name: Build APK
        run: |
          source venv/bin/activate
          buildozer -v android debug

      # Optional Step: Upload APK as an artifact
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: MyApp-debug.apk
          path: bin/MyApp-*.apk

