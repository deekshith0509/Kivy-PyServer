name: CI Build

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-22.04

    env:
      ANDROIDSDK: ${{ env.HOME }}/.buildozer/android/platform/android-sdk
      ANDROIDNDK: ${{ env.HOME }}/.buildozer/android/platform/android-sdk/ndk/25.2.9519653

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ Set up Java 17
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # 3Ô∏è‚É£ Set up Python 3.10
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # 4Ô∏è‚É£ Install Buildozer and system dependencies
      - name: Install Buildozer and dependencies
        run: |
          sudo apt update && sudo apt install -y \
            python3-pip python3-setuptools python3-wheel git zip unzip zlib1g-dev \
            libncurses5 libffi-dev libssl-dev liblzma-dev libgdbm-dev libbz2-dev libreadline-dev \
            libsqlite3-dev libgdbm-compat-dev curl openjdk-17-jdk
          python3 -m pip install --upgrade pip setuptools
          python3 -m pip install "Cython<3.0.0" buildozer

      # 5Ô∏è‚É£ Install Android SDK and NDK manually
      - name: Install Android SDK and NDK
        run: |
          export ANDROIDSDK=$HOME/.buildozer/android/platform/android-sdk
          export ANDROIDNDK=$ANDROIDSDK/ndk/25.2.9519653
          mkdir -p $ANDROIDSDK
          cd $ANDROIDSDK

          # Download command-line tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
          unzip -q cmdline-tools.zip
          rm cmdline-tools.zip

          # Correct folder layout
          mkdir -p cmdline-tools/latest
          mv cmdline-tools/* cmdline-tools/latest/
          export PATH=$ANDROIDSDK/cmdline-tools/latest/bin:$PATH

          # Accept licenses and install components
          yes | sdkmanager --sdk_root=$ANDROIDSDK --licenses
          yes | sdkmanager --sdk_root=$ANDROIDSDK \
              "platform-tools" "build-tools;33.0.2" "platforms;android-33" "ndk;25.2.9519653"

      # 6Ô∏è‚É£ Optional: Cache Buildozer environment
      - name: Cache Buildozer
        uses: actions/cache@v4
        with:
          path: |
            ~/.buildozer
          key: buildozer-${{ runner.os }}-${{ hashFiles('buildozer.spec') }}

      # 7Ô∏è‚É£ Initialize Buildozer spec if not exists
      - name: Initialize Buildozer
        run: |
          if [ ! -f buildozer.spec ]; then
            buildozer init
          fi

      # 8Ô∏è‚É£ Set SDK and NDK paths in buildozer.spec
      - name: Configure SDK/NDK paths
        run: |
          grep -q "^android.sdk_path" buildozer.spec || echo "android.sdk_path = $HOME/.buildozer/android/platform/android-sdk" >> buildozer.spec
          grep -q "^android.ndk_path" buildozer.spec || echo "android.ndk_path = $HOME/.buildozer/android/platform/android-sdk/ndk/25.2.9519653" >> buildozer.spec
          grep "android.*_path" buildozer.spec

      # 9Ô∏è‚É£ Build Android APK
      - name: Build Android APK
        run: |
          export PATH=$HOME/.buildozer/android/platform/android-sdk/cmdline-tools/latest/bin:$PATH
          buildozer android debug

      # üîü Upload APK artifact
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: bin/*.apk
