name: Build Kivy APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      # 1Ô∏è‚É£ Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ Set up Temurin Java 17
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # 3Ô∏è‚É£ Set up Python 3.9 (better compatibility with Kivy build chain)
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # 4Ô∏è‚É£ Install system dependencies with libtool-bin
      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            git zip unzip openjdk-17-jdk build-essential \
            libssl-dev libffi-dev python3-dev \
            zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev \
            libsqlite3-dev libreadline-dev libbz2-dev \
            ccache autoconf libtool libtool-bin automake pkg-config

      # 5Ô∏è‚É£ Create virtual environment
      - name: Create Python virtualenv
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip setuptools wheel
          pip install Cython==0.29.36

      # 6Ô∏è‚É£ Install Buildozer
      - name: Install Buildozer
        run: |
          source .venv/bin/activate
          pip install buildozer==1.5.0

      # 7Ô∏è‚É£ Cache Buildozer directory
      - name: Cache Buildozer directory
        uses: actions/cache@v3
        with:
          path: |
            .buildozer/android/platform/android-sdk
            .buildozer/android/platform/android-ndk
            .buildozer/android/platform/apache-ant
          key: buildozer-${{ runner.os }}-${{ hashFiles('buildozer.spec') }}-v3

      # 8Ô∏è‚É£ Update buildozer.spec to use develop branch of p4a and fix requirements
      - name: Update buildozer.spec
        run: |
          # Remove the explicit python3 version and pyjnius
          sed -i 's/^requirements = .*/requirements = python3,kivy,qrcode,plyer,kivymd==1.1.1,materialyoucolor,exceptiongroup,asyncgui,asynckivy,Pillow,urllib3,requests,setuptools/g' buildozer.spec
          
          # Add p4a branch to buildozer.spec if not present
          if ! grep -q "p4a.branch" buildozer.spec; then
            echo -e "\n[buildozer]\np4a.branch = develop" >> buildozer.spec
          else
            sed -i 's/^p4a.branch = .*/p4a.branch = develop/g' buildozer.spec
          fi

      # 9Ô∏è‚É£ Initialize Android SDK and accept licenses
      - name: Initialize SDK
        run: |
          source .venv/bin/activate
          mkdir -p ~/.android
          echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" > ~/.android/repositories.cfg
          buildozer android update

      # üîü Build APK
      - name: Build APK
        run: |
          source .venv/bin/activate
          export USE_CCACHE=1
          buildozer -v android debug

      # 1Ô∏è‚É£1Ô∏è‚É£ Upload APK
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: bin/*.apk
        if: success()

      # 1Ô∏è‚É£2Ô∏è‚É£ Upload logs on failure
      - name: Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            .buildozer/android/platform/build-*/build.log
            .buildozer/logs/
        if: failure()
