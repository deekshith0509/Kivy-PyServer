name: Build Kivy APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
      # 1️⃣ Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2️⃣ Set up Temurin Java 17
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # 3️⃣ Set up Python 3.10
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # 4️⃣ Create virtual environment & upgrade pip/setuptools
      - name: Create Python virtualenv
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip setuptools cython wheel

      # 5️⃣ Install system dependencies including libffi-dev
      - name: Install Buildozer & Android dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            python3-pip python3-setuptools python3-wheel \
            libffi-dev pkg-config git zip unzip openjdk-17-jdk \
            virtualenv build-essential libsqlite3-dev sqlite3 \
            bzip2 libbz2-dev zlib1g-dev libssl-dev libncurses-dev \
            libncursesw5-dev libreadline-dev libsqlite3-dev \
            libgdbm-dev libdb5.3-dev libbz2-dev libexpat1-dev \
            liblzma-dev libffi-dev libtool pkg-config libgl1 \
            libgles2 autoconf automake cmake curl unzip

      # 6️⃣ Install Buildozer & latest python-for-android
      - name: Install Buildozer & P4A
        run: |
          source .venv/bin/activate
          pip install --upgrade buildozer python-for-android

      # 7️⃣ Accept SDK licenses & preinstall Android NDK
      - name: Prepare Android SDK & NDK
        run: |
          source .venv/bin/activate
          mkdir -p ~/.android
          echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" > ~/.android/repositories.cfg

          # Preinstall NDK 25b manually
          mkdir -p ~/.buildozer/android/platform
          cd ~/.buildozer/android/platform
          curl -L -o ndk.zip https://dl.google.com/android/repository/android-ndk-r25b-linux.zip
          unzip -q ndk.zip
          mv android-ndk-r25b android-ndk
          rm ndk.zip
          cd -

          # Retry SDK update if necessary
          for i in 1 2 3; do
            yes | buildozer android update --sdk_dir=$HOME/.buildozer/android/platform/android-sdk && break || sleep 30
          done

      # 8️⃣ Initialize Buildozer spec if missing and force accept license
      - name: Initialize buildozer.spec
        run: |
          source .venv/bin/activate
          if [ ! -f buildozer.spec ]; then
            buildozer init
          fi
          sed -i 's/^#android.accept_sdk_license =.*/android.accept_sdk_license = True/g' buildozer.spec
          sed -i 's/^#android.api =.*/android.api = 33/g' buildozer.spec
          # Force Python-for-Android to use system libffi
          if ! grep -q "p4a.system_libffi = True" buildozer.spec; then
            echo "p4a.system_libffi = True" >> buildozer.spec
          fi

      # 9️⃣ Build the APK
      - name: Build APK
        run: |
          source .venv/bin/activate
          export PATH=$PATH:~/.local/bin
          buildozer android debug

      # 🔟 Upload APK artifact
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: bin/*.apk
