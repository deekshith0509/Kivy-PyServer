name: Build Kivy APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Set up Temurin Java 17
      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # 3. Set up Python 3.9
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # 4. Install system dependencies
      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            git zip unzip openjdk-17-jdk build-essential \
            libssl-dev libffi-dev python3-dev \
            zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev \
            libsqlite3-dev libreadline-dev libbz2-dev \
            ccache autoconf automake libtool libtool-bin pkg-config \
            wget libtinfo5 m4

      # 5. Set up virtualenv, install Cython and Buildozer
      - name: Setup virtualenv and install Buildozer
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip setuptools wheel
          pip install Cython==0.29.36
          pip install buildozer==1.5.0

      # 6. Set up Android SDK
      - name: Set up Android SDK
        run: |
          mkdir -p ~/.android
          echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" > ~/.android/repositories.cfg
          mkdir -p .buildozer/android/platform/android-sdk/cmdline-tools/latest
          if [ ! -f "cmdline-tools.zip" ]; then
            wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O cmdline-tools.zip
            unzip -q cmdline-tools.zip
            mv cmdline-tools/* .buildozer/android/platform/android-sdk/cmdline-tools/latest/
            rm -rf cmdline-tools cmdline-tools.zip
          fi
          echo "ANDROID_SDK_ROOT=$GITHUB_WORKSPACE/.buildozer/android/platform/android-sdk" >> $GITHUB_ENV

      # 7. Install SDK components and accept licenses
      - name: Install SDK components
        run: |
          yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT \
            "platform-tools" "platforms;android-33" "build-tools;33.0.2" "ndk;25.1.8937393"
          yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT --licenses
          echo "ANDROID_NDK_ROOT=$ANDROID_SDK_ROOT/ndk/25.1.8937393" >> $GITHUB_ENV

      # 8. Build APK (assumes buildozer.spec exists; activates venv here)
      - name: Build APK
        run: |
          source .venv/bin/activate
          export USE_CCACHE=1
          export ANDROIDNDK=$ANDROID_NDK_ROOT
          export ANDROIDSDK=$ANDROID_SDK_ROOT
          buildozer -v android debug --log-level=2
        env:
          ANDROIDNDK: ${{ env.ANDROID_NDK_ROOT }}
          ANDROIDSDK: ${{ env.ANDROID_SDK_ROOT }}

      # 9. Upload APK on success
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: bin/*.apk
        if: success()

      # 10. Upload logs on failure
      - name: Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            .buildozer/android/platform/build-*/build.log
            .buildozer/logs/
            .buildozer/android/platform/python-for-android/dist/*.log
        if: failure()
