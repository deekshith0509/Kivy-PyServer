name: Build Kivy APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
      # 1Ô∏è‚É£ Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ Set up Temurin Java 17
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # 3Ô∏è‚É£ Set up Python 3.10
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # 4Ô∏è‚É£ Install system dependencies including autotools
      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            python3-pip python3-setuptools python3-wheel \
            libffi-dev pkg-config git zip unzip openjdk-17-jdk \
            virtualenv build-essential libsqlite3-dev sqlite3 \
            bzip2 libbz2-dev zlib1g-dev libssl-dev libncurses-dev \
            libncursesw5-dev libreadline-dev libgdbm-dev libdb5.3-dev \
            liblzma-dev libtool autoconf automake cmake curl \
            libgl1 libgles2

      # 5Ô∏è‚É£ Create virtual environment & upgrade pip/setuptools
      - name: Create Python virtualenv
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip setuptools cython wheel

      # 6Ô∏è‚É£ Install Buildozer & python-for-android
      - name: Install Buildozer & P4A
        run: |
          source .venv/bin/activate
          pip install --upgrade buildozer
          pip install --upgrade git+https://github.com/kivy/python-for-android.git

      # 7Ô∏è‚É£ Initialize Buildozer spec if missing
      - name: Initialize buildozer.spec
        run: |
          source .venv/bin/activate
          if [ ! -f buildozer.spec ]; then
            buildozer init
          fi

      # 8Ô∏è‚É£ Configure buildozer.spec for system libffi
      - name: Configure buildozer spec
        run: |
          # Ensure API and NDK are set
          sed -i 's/^#android.api =.*/android.api = 33/g' buildozer.spec
          sed -i 's/^android.ndk =.*/android.ndk = 25b/g' buildozer.spec
          sed -i 's/^#android.accept_sdk_license =.*/android.accept_sdk_license = True/g' buildozer.spec
          
          # Add p4a.local_recipes to use system libffi
          if ! grep -q "p4a.local_recipes" buildozer.spec; then
            echo "" >> buildozer.spec
            echo "# Force python-for-android to skip libffi build" >> buildozer.spec
            echo "p4a.local_recipes = recipes" >> buildozer.spec
          fi

      # 9Ô∏è‚É£ Create custom recipe to skip libffi
      - name: Create custom libffi recipe
        run: |
          mkdir -p recipes/libffi
          cat > recipes/libffi/__init__.py << 'EOF'
          from pythonforandroid.recipe import Recipe
          from pythonforandroid.util import current_directory
          from os.path import join
          import sh

          class LibffiRecipe(Recipe):
              version = 'system'
              url = None
              
              def build_arch(self, arch):
                  # Use system libffi - skip build
                  super().build_arch(arch)
                  
              def get_recipe_env(self, arch):
                  env = super().get_recipe_env(arch)
                  # Point to system libffi
                  env['LDFLAGS'] = env.get('LDFLAGS', '') + ' -lffi'
                  env['CFLAGS'] = env.get('CFLAGS', '') + ' -I/usr/include'
                  return env

          recipe = LibffiRecipe()
          EOF

      # üîü Accept SDK licenses & setup Android environment
      - name: Prepare Android SDK
        run: |
          source .venv/bin/activate
          mkdir -p ~/.android
          echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" > ~/.android/repositories.cfg
          
          # Let buildozer handle NDK download
          export ANDROID_SDK_ROOT=$HOME/.buildozer/android/platform/android-sdk
          export ANDROID_NDK_ROOT=$HOME/.buildozer/android/platform/android-ndk

      # 1Ô∏è‚É£1Ô∏è‚É£ Build the APK with verbose logging
      - name: Build APK
        run: |
          source .venv/bin/activate
          export PATH=$PATH:~/.local/bin
          buildozer -v android debug

      # 1Ô∏è‚É£2Ô∏è‚É£ Upload APK artifact
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: bin/*.apk
        if: success()

      # 1Ô∏è‚É£3Ô∏è‚É£ Upload build log on failure
      - name: Upload build log
        uses: actions/upload-artifact@v4
        with:
          name: buildozer-log
          path: .buildozer/android/platform/build-*/build.log
        if: failure()
